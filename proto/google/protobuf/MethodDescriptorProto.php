<?php
namespace google\protobuf;

// @@protoc_insertion_point(namespace:.google.protobuf.MethodDescriptorProto)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: google/protobuf/descriptor.proto
 *
 * Describes a method of a service.
 *
 * -*- magic methods -*-
 *
 * @method string getName()
 * @method void setName(string $value)
 * @method string getInputType()
 * @method void setInputType(string $value)
 * @method string getOutputType()
 * @method void setOutputType(string $value)
 * @method \google\protobuf\MethodOptions getOptions()
 * @method void setOptions(\google\protobuf\MethodOptions $value)
 */
class MethodDescriptorProto extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.google.protobuf.MethodDescriptorProto)
  
  /**
   * @var string $name
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $name;
  
  /**
   * Input and output type names.  These are resolved in the same way as
   * FieldDescriptorProto.type_name, but must refer to a message type.
   *
   * @var string $input_type
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $input_type;
  
  /**
   * @var string $output_type
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $output_type;
  
  /**
   * @var \google\protobuf\MethodOptions $options
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $options;
  
  
  // @@protoc_insertion_point(properties_scope:.google.protobuf.MethodDescriptorProto)

  // @@protoc_insertion_point(class_scope:.google.protobuf.MethodDescriptorProto)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "name",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "input_type",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "output_type",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "options",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => "\\google\\protobuf\\MethodOptions",
      )));
      // @@protoc_insertion_point(builder_scope:.google.protobuf.MethodDescriptorProto)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
