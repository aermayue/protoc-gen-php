-
  match: "^(EnumDescriptorProto|DescriptorProto)$"
  file: "/google/protobuf/$0.php"
  insertion_point: "class_scope:.google.protobuf.$0"
  insertion: |
    /**
     *  helper method for retriviing parent FileDescriptorProto message
     *
     *  @return \google\protobuf\FileDescriptorProto
     */
    public function file()
    {
      $parent = $this->containerOf();
      while ($parent && !($parent instanceof \google\protobuf\FileDescriptorProto)) {
        $parent = $parent->containerOf();
      }
      return $parent;
    }
-
  match: "^Label$"
  file: "/google/protobuf/FieldDescriptorProto/Label.php"
  insertion_point: "class_scope:.google.protobuf.FieldDescriptorProto.Label"
  insertion: |
    public static function isRequired(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::LABEL_REQUIRED == $field->getLabel();
    }

    public static function isOptional(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::LABEL_OPTIONAL == $field->getLabel();
    }

    public static function isRepeated(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::LABEL_REPEATED == $field->getLabel();
    }

    public static function isPacked(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::LABEL_REPEATED == $field->getLabel() &&
        $field->getOptions()->getPacked();
    }
-
  match: "^Type$"
  file: "/google/protobuf/FieldDescriptorProto/Type.php"
  insertion_point: "class_scope:.google.protobuf.FieldDescriptorProto.Type"
  insertion: |
    public static function isMessage(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::TYPE_MESSAGE == $field->getType();
    }

    public static function isEnum(\google\protobuf\FieldDescriptorProto $field)
    {
      return self::TYPE_ENUM == $field->getType();
    }

